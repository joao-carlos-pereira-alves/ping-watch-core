c
notification.errors.each { |e| e.methods }.last.attribute
notification.errors.each { |e| e.methods }.last.full_message
notification.errors.each { |e| e.methods }.last.message
notification.errors.each { |e| e.methods }.last.methods
notification.errors.each { |e| e.methods }.last
notification.errors.each { |e| e.methods }
notification.errors.each { |e| e }
notification.errors
notification.errors.count
notification.errors.last
notification.errors
c
params
@notification
c
@notification.notification_method_label
@notification
@notification.update(notification_params)
c
@notification.errors.messages
@notification.update(notification_params)
notification_params
c
params.fetch(:notification).permit(:alert_type, :frequency, :threshold_value, :enabled)
params.fetch(:notification)
params.require(:notification).permit(:alert_type, :frequency, :threshold_value, :enabled)1
params.fetch(:notification, %w[alert_type frequency threshold_value enabled])
params.fetch(:notification, %w[alert_type frequency])
params.fetch(:notification, %w[alert_type])
params.fetch(:notification, ['alert_type'])
params.fetch(:notification, {'alert_type'})
params.fetch(:notification, {})
params.fetch(:notification)
params
notification_params
@notification.errors
@notification.update(notification_params)
c
params[:id]
params
c1
Notification.find_by(uuid: params[:id])
params[:id]
:id
params
c
notification
c
sorted_status_counts&.map
datasets
c
sorted_status_counts.keys.map { |status| status.to_s.capitalize }
status_colors[sorted_status.first]
status_colors
sorted_status.last
sorted_status.first
sorted_status
c
sorted_status_counts.each do |e| e.last end
sorted_status_counts.each do |e| e end
sorted_status_counts.each do |e|
sorted_status_counts
c
self
site
site_checks.pluck(:check_status)
site_checks.pluck(:status)
site_checks.last(2)
site_checks.last
site_checks
status_counts
sorted_status_counts
c
params
@site
c
site
@site
c
@site
site
form
site
c
response_times.each(&:)
response_times.each(&:to_s)
response_times.each(&:to_i)
response_times.values&.round(3)
response_times.values
response_times
