var c=Object.defineProperty;var u=Object.getOwnPropertySymbols;var d=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;var r=(e,t,s)=>t in e?c(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s,n=(e,t)=>{for(var s in t||(t={}))d.call(t,s)&&r(e,s,t[s]);if(u)for(var s of u(t))l.call(t,s)&&r(e,s,t[s]);return e};(function(e,t){typeof exports=="object"&&typeof module!="undefined"?module.exports=t(require("@hotwired/stimulus"),require("chart.js/auto")):typeof define=="function"&&define.amd?define(["@hotwired/stimulus","chart.js/auto"],t):(e=typeof globalThis!="undefined"?globalThis:e||self,e["stimulus-chartjs"]=t(e.Stimulus,e.Chart))})(this,function(e,t){"use strict";function s(a){return a&&typeof a=="object"&&"default"in a?a:{default:a}}var o=s(t);class i extends e.Controller{connect(){const h=this.hasCanvasTarget?this.canvasTarget:this.element;this.chart=new o.default(h.getContext("2d"),{type:this.typeValue,data:this.chartData,options:this.chartOptions})}disconnect(){this.chart.destroy(),this.chart=void 0}get chartData(){return this.hasDataValue||console.warn("[stimulus-chartjs] You need to pass data as JSON to see the chart."),this.dataValue}get chartOptions(){return n(n({},this.defaultOptions),this.optionsValue)}get defaultOptions(){return{}}}return i.targets=["canvas"],i.values={type:{type:String,default:"line"},data:Object,options:Object},i});
